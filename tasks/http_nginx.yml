---
- name: "[NGINX] -  remove some commented line in php-fpm conf (Debian/Ubuntu)"
  lineinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    regexp: '^\;env'
    state: absent
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm
  when:
    - ansible_os_family == "Debian"

- name: "[NGINX] -  remove some commented line in php-fpm conf (CentOS/RedHat)"
  lineinfile:
    dest: "{{ php_dir }}/php-fpm.d/www.conf"
    regexp: '^\;env'
    state: absent
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"

- name: "[NGINX] -  Add path variable to php-fpm (Debian/Ubuntu)"
  blockinfile:
    dest: "{{ php_dir }}/fpm/pool.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = $PATH
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: reload php-fpm
  when:
    - ansible_os_family == "Debian"

- name: "[NGINX] -  Add path variable to php-fpm (CentOS/RedHat)"
  blockinfile:
    dest: "{{ php_dir }}/php-fpm.d/www.conf"
    insertafter: '^; Default Value: clean env$'
    marker: "; {mark} ANSIBLE MANAGED BLOCK"
    block: |
      env[HOSTNAME] = $HOSTNAME
      env[PATH] = $PATH
      env[TMP] = /tmp
      env[TMPDIR] = /tmp
      env[TEMP] = /tmp
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"

- name: "[NGINX] - Configure user/group and socket for php-fpm (CentOS/RedHat)"
  lineinfile:
    dest: "{{ php_dir }}/php-fpm.d/www.conf"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - { regexp: '^listen\s*=', line: 'listen = /var/run/php-fpm.sock' }
    - { regexp: '^user\s*=', line: 'user = {{ nextcloud_websrv_user }}' }
    - { regexp: '^group\s*=', line: 'group = {{ nextcloud_websrv_group }}' }
    - { regexp: 'listen.owner\s*=', line: 'listen.owner = {{ nextcloud_websrv_user }}' }
    - { regexp: 'listen.group\s*=', line: 'listen.group = {{ nextcloud_websrv_group }}' }

    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"

- name: "[NGINX] -  enable APC for php CLI (Debian/Ubuntu)"
  lineinfile:
    dest: "{{ php_dir }}/cli/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm
  when:
    - ansible_os_family == "Debian"

- name: "[NGINX] -  enable APC for php CLI (CentOS/RedHat)"
  lineinfile:
    dest: "{{ php_dir }}/php.ini"
    line: "apc.enable_cli = 1"
    insertbefore: "^; End:$"
    state: present
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"

- name: "[NGINX] -  Set memory_limit = 512M for php.ini (CentOS/RedHat)"
  lineinfile:
    dest: "{{ php_dir }}/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - { regexp: '^memory_limit', line: 'memory_limit = 512M' }
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"

- name: "[NGINX] -  enable PHP OPcache for php.ini (Debian/Ubuntu)"
  lineinfile:
    dest: "{{ php_dir }}/fpm/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - { regexp: 'opcache.enable=0', line: 'opcache.enable=1' }
    - { regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1' }
    - { regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=8' }
    - { regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000' }
    - { regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128' }
    - { regexp: 'opcache.save_comments', line: 'opcache.save_comments=1' }
    - { regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1' }
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm
  when:
    - ansible_os_family == "Debian"

- name: "[NGINX] -  enable PHP OPcache for php.ini (CentOS/RedHat)"
  lineinfile:
    dest: "{{ php_dir }}/php.ini"
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - { regexp: 'opcache.enable=0', line: 'opcache.enable=1' }
    - { regexp: 'opcache.enable_cli', line: 'opcache.enable_cli=1' }
    - { regexp: 'opcache.interned_strings_buffer', line: 'opcache.interned_strings_buffer=8' }
    - { regexp: 'opcache.max_accelerated_files', line: 'opcache.max_accelerated_files=10000' }
    - { regexp: 'opcache.memory_consumption', line: 'opcache.memory_consumption=128' }
    - { regexp: 'opcache.save_comments', line: 'opcache.save_comments=1' }
    - { regexp: 'opcache.revalidate_freq', line: 'opcache.revalidate_freq=1' }
    # validate: "/usr/sbin/{{ php_bin }} -t #%s"
  notify: reload php-fpm-rh
  when:
    - ansible_os_family == "RedHat"


- name: "[NGINX] -  Public Diffie-Hellman Parameter are generated. This might take a while."
  command: "openssl dhparam -out {{ nextcloud_tls_dhparam }} 2048"
  args:
    creates: "{{ nextcloud_tls_dhparam }}"

- name: "[NGINX] -  php handler configuration is present."
  template:
    dest: /etc/nginx/sites-available/php_handler.cnf
    src: templates/nginx_php_handler.j2
  notify: reload http

- name: "[NGINX] -  php handler is enabled"
  file:
    path: /etc/nginx/sites-enabled/php_handler
    src: /etc/nginx/sites-available/php_handler.cnf
    state: link
  notify: reload http

- name: "[NGINX] -  generate Nextcloud configuration for nginx"
  template:
    dest: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    src: "{{ nextcloud_websrv_template }}"
  notify: reload http

- name: "[NGINX] -  Enable Nextcloud in nginx conf"
  file:
    path: /etc/nginx/sites-enabled/nc_{{ nextcloud_instance_name }}
    src: /etc/nginx/sites-available/nc_{{ nextcloud_instance_name }}.cnf
    state: link
  notify: reload http

- name: "[NGINX] -  Disable nginx default site"
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: nextcloud_disable_websrv_default_site | bool
  notify: reload http
